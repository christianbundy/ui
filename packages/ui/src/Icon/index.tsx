import * as React from 'react';
import styled from 'styled-components';
import {
  color,
  space,
  layout,
  position,
  ColorProps,
  SpaceProps,
  LayoutProps,
  PositionProps,
} from 'styled-system';
// feather icons
import {
  ArrowUp,
  ArrowDown,
  ArrowRight,
  ArrowLeft,
  FileText,
  ChevronUp,
  ChevronDown,
  ChevronLeft,
  ChevronRight,
  Check,
  Circle,
  Info,
  AlertTriangle,
  AlertCircle,
  Clock,
  Delete,
  RefreshCw,
  Search,
  FilePlus,
  Menu,
  User,
  Edit,
  Eye,
  EyeOff,
  AlignLeft,
  AlignCenter,
  AlignRight,
  Maximize,
  Minimize,
  Download,
  Trash,
  Clipboard,
  Activity,
  Send,
  UserCheck,
  CreditCard,
  X,
} from 'react-feather';

// custom icons
import { Megaphone } from './icons/Megaphone';
import { Loading } from './icons/Loading';
import { CircleCheckFull } from './icons/CircleCheckFull';

export type SVGProps = ColorProps &
  SpaceProps &
  LayoutProps &
  PositionProps &
  React.HTMLAttributes<SVGSVGElement>;

export type NoopProps = {
  children: React.ReactElement;
  className?: string;
};

// mapping of all icons that are in use
const icons: { [Icon: string]: React.ComponentType } = {
  ArrowUp,
  ArrowDown,
  ArrowRight,
  ArrowLeft,
  ChevronUp,
  ChevronDown,
  ChevronLeft,
  ChevronRight,
  FileText,
  Check,
  Circle,
  Info,
  AlertTriangle,
  AlertCircle,
  Clock,
  Delete,
  RefreshCw,
  Search,
  FilePlus,
  Menu,
  User,
  Edit,
  Eye,
  EyeOff,
  AlignLeft,
  AlignCenter,
  AlignRight,
  Maximize,
  Minimize,
  Download,
  Trash,
  Clipboard,
  Activity,
  Send,
  UserCheck,
  CreditCard,
  X,

  // custom
  Megaphone,
  Loading,
  CircleCheckFull,
};

// clones icon and passes on the classnmaes generated by Styles
function Noop({ children, className = '' }: NoopProps) {
  return React.cloneElement(children, {
    className,
  });
}

// basically a HOC that passes on styles to its child
const Styles = styled(Noop)<SVGProps>`
    display: block;
    pointer-events: none;
    transition: color 150ms ease-in-out;
    stroke: currentColor;
    ${color}
    ${space}
    ${layout}
    ${position}
  `;

export function Icon({
  name,
  ...rest
}: {
  name: string;
} & SVGProps) {
  const I = icons[name];

  if (!I) {
    return null;
  }

  return (
    <Styles width="16px" height="16px" {...rest}>
      <I />
    </Styles>
  );
}
